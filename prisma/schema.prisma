// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlogPost {
  id String @default(cuid()) @id
  title String
  slug String @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  author User? @relation(fields: [authorId], references: [id])
  authorId String?
  featuredImage String?
  excerpt String
  content String
  tags Tags[]
  status Boolean @default(false)
}

model Tags {
  id String @default(cuid()) @id
  name String?
  blogposts BlogPost[]
  projects ProjectPost[]
}

model Account {
  id String @id @default(cuid())
  userId String @map("user_id")
  type String
  provider String
  providerAccountId String @map("provider_account_id")
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String?
  session_state String?
  oauth_token_secret String?
  oauth_token String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(cuid())
  sessionToken String @unique@map("session_token")
  userId String @map("user_id")
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id String @default(cuid()) @id
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  posts BlogPost[]
  accounts Account[]
  sessions Session[]
  @@map(name: "users")
}

model VerificationToken {
  id Int @id @default(autoincrement())
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}

model Techs {
  id String @default(cuid()) @id
  name String?
  projects ProjectPost[]
}

model ProjectPost {
  id String @default(cuid()) @id
  title String
  slug String @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  featuredImage String?
  links String?
  techs Techs[]
  excerpt String
  content String
  tags Tags[]
  status Status @default(PLAN_TO_WORK)
}

enum Status {
  DROPPED
  PLAN_TO_WORK
  WORKING
  ON_HOLD
  COMPLETED
}